<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="sat.mlw"/>
<theory name="NumOf">
 <goal name="infix ==&#39;vc" expl="VC for infix ==">
 </goal>
 <goal name="numof_decreases&#39;vc" expl="VC for numof_decreases">
 </goal>
</theory>
<theory name="Sat">
 <goal name="infix ==&#39;vc" expl="VC for infix ==">
 </goal>
 <goal name="cnf&#39;vc" expl="VC for cnf">
 </goal>
 <goal name="extract_sat_valuation&#39;vc" expl="VC for extract_sat_valuation">
 </goal>
 <goal name="partial_eval_clause&#39;vc" expl="VC for partial_eval_clause">
 </goal>
 <goal name="partial_eval_cnf&#39;vc" expl="VC for partial_eval_cnf">
 </goal>
 <goal name="backtrack&#39;vc" expl="VC for backtrack">
 </goal>
 <goal name="set_value&#39;vc" expl="VC for set_value">
 </goal>
 <goal name="sat_aux&#39;vc" expl="VC for sat_aux">
 </goal>
 <goal name="sat&#39;vc" expl="VC for sat">
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1">
 </goal>
</theory>
<theory name="UnitSat">
 <goal name="infix ==&#39;vc" expl="VC for infix ==" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.011023" steps="2"/></proof>
 </goal>
 <goal name="cnf&#39;vc" expl="VC for cnf" proved="true">
 <proof prover="2"><result status="valid" time="0.022786" steps="36635"/></proof>
 </goal>
 <goal name="extract_sat_valuation&#39;vc" expl="VC for extract_sat_valuation" proved="true">
 <proof prover="3"><result status="valid" time="0.154709" steps="35169"/></proof>
 </goal>
 <goal name="partial_eval_clause&#39;vc" expl="VC for partial_eval_clause">
 <transf name="split_vc" >
  <goal name="partial_eval_clause&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.028528" steps="66698"/></proof>
  </goal>
  <goal name="partial_eval_clause&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.019302" steps="50656"/></proof>
  </goal>
  <goal name="partial_eval_clause&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.022078" steps="49677"/></proof>
  </goal>
  <goal name="partial_eval_clause&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.023292" steps="53588"/></proof>
  </goal>
  <goal name="partial_eval_clause&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.023015" steps="52545"/></proof>
  </goal>
  <goal name="partial_eval_clause&#39;vc.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="12170"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="2223856"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="454471"/></proof>
  <transf name="split_vc" >
   <goal name="partial_eval_clause&#39;vc.5.0" expl="postcondition">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.000000" steps="57901"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.000000" steps="1750383"/></proof>
   <proof prover="3" timelimit="5"><result status="timeout" time="5.000000" steps="1786604"/></proof>
   </goal>
   <goal name="partial_eval_clause&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.287315" steps="3497"/></proof>
   </goal>
   <goal name="partial_eval_clause&#39;vc.5.2" expl="postcondition">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.000000" steps="73754"/></proof>
   <proof prover="2" timelimit="5"><result status="timeout" time="5.000000" steps="2052084"/></proof>
   <proof prover="3" timelimit="5"><result status="timeout" time="5.000000" steps="2038439"/></proof>
   </goal>
   <goal name="partial_eval_clause&#39;vc.5.3" expl="postcondition">
   <proof prover="0" timelimit="5"><undone/></proof>
   <proof prover="2" timelimit="5"><undone/></proof>
   <proof prover="3" timelimit="5"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="partial_eval_clause&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.013176" steps="4694"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="partial_eval_cnf&#39;vc" expl="VC for partial_eval_cnf">
 <transf name="split_vc" >
  <goal name="partial_eval_cnf&#39;vc.0" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="valid" time="0.015052" steps="3196"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.1" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="valid" time="0.015156" steps="3198"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.2" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="valid" time="0.022658" steps="50495"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.3" expl="index in array bounds">
  <proof prover="2" obsolete="true"><result status="valid" time="0.024998" steps="62153"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.4" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.020440" steps="62682"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.5" expl="loop invariant preservation">
  <proof prover="2" obsolete="true"><result status="valid" time="0.015288" steps="4777"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.6" expl="loop invariant preservation">
  <proof prover="2" obsolete="true"><result status="valid" time="0.016959" steps="4779"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.7" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="5482"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="2130773"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="290423"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.8" expl="assertion">
  <proof prover="0" obsolete="true"><result status="valid" time="0.265090" steps="2860"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.9" expl="exceptional postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.018951" steps="4862"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.10" expl="assertion">
  <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="80799"/></proof>
  <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="2582738"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="1895603"/></proof>
  <transf name="split_vc" >
   <goal name="partial_eval_cnf&#39;vc.10.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="10314"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="2460262"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="403042"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.11" expl="exceptional postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="9184"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="2175597"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="387704"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.12" expl="loop invariant preservation">
  <proof prover="2" obsolete="true"><result status="valid" time="0.016091" steps="4782"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.13" expl="loop invariant preservation">
  <proof prover="2" obsolete="true"><result status="valid" time="0.017669" steps="4784"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.14" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="5764"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="2155226"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="368128"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.15" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.015655" steps="4531"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.16" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.014553" steps="4400"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.17" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="4943"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="1952981"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="438576"/></proof>
  </goal>
  <goal name="partial_eval_cnf&#39;vc.18" expl="out of loop bounds">
  <proof prover="2" obsolete="true"><result status="valid" time="0.028849" steps="49667"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="backtrack&#39;vc" expl="VC for backtrack">
 <transf name="split_vc" >
  <goal name="backtrack&#39;vc.0" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.023070" steps="52356"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.1" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.017363" steps="3699"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.2" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.022639" steps="51890"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.3" expl="index in array bounds">
  <proof prover="0" obsolete="true"><result status="valid" time="0.052986" steps="532"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.4" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.025052" steps="57347"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.5" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.036580" steps="103157"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.6" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.026135" steps="52047"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.7" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.015941" steps="3765"/></proof>
  </goal>
  <goal name="backtrack&#39;vc.8" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.024353" steps="51103"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_and_propagate&#39;vc" expl="VC for set_and_propagate">
 </goal>
 <goal name="sat&#39;vc" expl="VC for sat">
 </goal>
</theory>
</file>
</why3session>
